{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nfunction verificarCUIL(props) {\n  var inputString, division, Caracters_1_2, Count;\n  return _regenerator.default.async(function verificarCUIL$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          inputString = '';\n          division = 0;\n          inputString = props.toString();\n\n          if (!(inputString.length === 11)) {\n            _context.next = 10;\n            break;\n          }\n\n          Caracters_1_2 = inputString.charAt(0) + inputString.charAt(1);\n\n          if (!(Caracters_1_2 === '20' || Caracters_1_2 === '23' || Caracters_1_2 === '24' || Caracters_1_2 === '27' || Caracters_1_2 === '30' || Caracters_1_2 === '33' || Caracters_1_2 === '34')) {\n            _context.next = 10;\n            break;\n          }\n\n          Count = inputString.charAt(0) * 5 + inputString.charAt(1) * 4 + inputString.charAt(2) * 3 + inputString.charAt(3) * 2 + inputString.charAt(4) * 7 + inputString.charAt(5) * 6 + inputString.charAt(6) * 5 + inputString.charAt(7) * 4 + inputString.charAt(8) * 3 + inputString.charAt(9) * 2 + inputString.charAt(10) * 1;\n          division = Count / 11;\n\n          if (!(division === Math.floor(division))) {\n            _context.next = 10;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 10:\n          return _context.abrupt(\"return\", false);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar _default = verificarCUIL;\nexports.default = _default;","map":{"version":3,"sources":["C:/Desarrollo/ReactNative/ARTConsultaCUIL/functions/VerificarCUIL.js"],"names":["verificarCUIL","props","inputString","division","toString","length","Caracters_1_2","charAt","Count","Math","floor"],"mappings":";;;;;;;;;AAAA,SAAeA,aAAf,CAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,UAAAA,WADN,GACoB,EADpB;AAEMC,UAAAA,QAFN,GAEiB,CAFjB;AAGED,UAAAA,WAAW,GAAGD,KAAK,CAACG,QAAN,EAAd;;AAHF,gBAIMF,WAAW,CAACG,MAAZ,KAAuB,EAJ7B;AAAA;AAAA;AAAA;;AAKQC,UAAAA,aALR,GAKwBJ,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwBL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,CALhD;;AAAA,gBAOMD,aAAa,KAAK,IAAlB,IACAA,aAAa,KAAK,IADlB,IAEAA,aAAa,KAAK,IAFlB,IAGAA,aAAa,KAAK,IAHlB,IAIAA,aAAa,KAAK,IAJlB,IAKAA,aAAa,KAAK,IALlB,IAMAA,aAAa,KAAK,IAbxB;AAAA;AAAA;AAAA;;AAeUE,UAAAA,KAfV,GAgBQN,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CAAxB,GACAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CADxB,GAEAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CAFxB,GAGAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CAHxB,GAIAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CAJxB,GAKAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CALxB,GAMAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CANxB,GAOAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CAPxB,GAQAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CARxB,GASAL,WAAW,CAACK,MAAZ,CAAmB,CAAnB,IAAwB,CATxB,GAUAL,WAAW,CAACK,MAAZ,CAAmB,EAAnB,IAAyB,CA1BjC;AA2BMJ,UAAAA,QAAQ,GAAGK,KAAK,GAAG,EAAnB;;AA3BN,gBA4BUL,QAAQ,KAAKM,IAAI,CAACC,KAAL,CAAWP,QAAX,CA5BvB;AAAA;AAAA;AAAA;;AAAA,2CA6Be,IA7Bf;;AAAA;AAAA,2CAiCS,KAjCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;eAoCeH,a","sourcesContent":["async function verificarCUIL(props) {\r\n  let inputString = '';\r\n  let division = 0;\r\n  inputString = props.toString();\r\n  if (inputString.length === 11) {\r\n    var Caracters_1_2 = inputString.charAt(0) + inputString.charAt(1);\r\n    if (\r\n      Caracters_1_2 === '20' ||\r\n      Caracters_1_2 === '23' ||\r\n      Caracters_1_2 === '24' ||\r\n      Caracters_1_2 === '27' ||\r\n      Caracters_1_2 === '30' ||\r\n      Caracters_1_2 === '33' ||\r\n      Caracters_1_2 === '34'\r\n    ) {\r\n      var Count =\r\n        inputString.charAt(0) * 5 +\r\n        inputString.charAt(1) * 4 +\r\n        inputString.charAt(2) * 3 +\r\n        inputString.charAt(3) * 2 +\r\n        inputString.charAt(4) * 7 +\r\n        inputString.charAt(5) * 6 +\r\n        inputString.charAt(6) * 5 +\r\n        inputString.charAt(7) * 4 +\r\n        inputString.charAt(8) * 3 +\r\n        inputString.charAt(9) * 2 +\r\n        inputString.charAt(10) * 1;\r\n      division = Count / 11;\r\n      if (division === Math.floor(division)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default verificarCUIL;\r\n"]},"metadata":{},"sourceType":"script"}