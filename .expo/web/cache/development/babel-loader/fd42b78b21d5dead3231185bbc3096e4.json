{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Resultado = _interopRequireDefault(require(\"../components/Resultado\"));\n\nvar _Spinner = _interopRequireDefault(require(\"../components/Spinner\"));\n\nvar _Splash = _interopRequireDefault(require(\"./Splash\"));\n\nvar _Background = _interopRequireDefault(require(\"./Background\"));\n\nvar _VerificarCUIL = _interopRequireDefault(require(\"../functions/VerificarCUIL\"));\n\nvar _ConsultarCUIL = _interopRequireDefault(require(\"../api/ConsultarCUIL\"));\n\nvar _LoginCUIL = _interopRequireDefault(require(\"../api/LoginCUIL\"));\n\nvar _jsxFileName = \"C:\\\\Desarrollo\\\\ReactNative\\\\ARTConsultaCUIL\\\\components\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Login = function (_Component) {\n  (0, _inherits2.default)(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Login);\n    _this = _super.call(this, props);\n\n    _this.onPress = function _callee() {\n      var esCUILValido, resp;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: !_this.state.loading\n              });\n\n              _context.next = 3;\n              return _regenerator.default.awrap((0, _VerificarCUIL.default)(_this.state.cuil));\n\n            case 3:\n              esCUILValido = _context.sent;\n              _context.t0 = esCUILValido;\n              _context.next = _context.t0 === false ? 7 : _context.t0 === true ? 10 : 21;\n              break;\n\n            case 7:\n              _this.setState({\n                loading: !_this.state.loading\n              });\n\n              _reactNative.Alert.alert('CUIL inv√°lido');\n\n              return _context.abrupt(\"break\", 21);\n\n            case 10:\n              _this.setState({\n                cuilValido: true\n              });\n\n              _context.next = 13;\n              return _regenerator.default.awrap((0, _LoginCUIL.default)(_this.state.cuil));\n\n            case 13:\n              resp = _context.sent;\n              _context.t1 = resp.nombre;\n              _context.next = 17;\n              break;\n\n            case 17:\n              _this.setState({\n                resultado: resp.Resultado,\n                nombre: resp.Nombre,\n                loading: !_this.state.loading\n              });\n\n              _this.props.handleLogin(resp.Nombre);\n\n              return _context.abrupt(\"break\", 20);\n\n            case 20:\n              return _context.abrupt(\"break\", 21);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.changeCUIL = function (cuil) {\n      _this.setState({\n        cuil: cuil,\n        resultado: null,\n        nombre: '',\n        cuilValido: false\n      });\n    };\n\n    _this.state = {\n      cuil: null,\n      verGrilla: false,\n      cuilValido: false,\n      resultado: null,\n      nombre: '',\n      loading: false,\n      showSplash: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_react.default.Fragment, null, this.state.showSplash === true ? _react.default.createElement(_Splash.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }) : _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, this.state.loading === false ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          borderWidth: 1\n        },\n        onChangeText: this.changeCUIL,\n        value: this.state.cuil,\n        placeholder: \"Ingrese CUIL\",\n        keyboardType: 'numeric',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.Button, {\n        onPress: this.onPress,\n        title: \"Ingresar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_Resultado.default, {\n        cuil: this.state.cuil,\n        resultado: this.state.resultado,\n        nombre: this.state.nombre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_Background.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      })) : _react.default.createElement(_Spinner.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n  return Login;\n}(_react.Component);\n\nexports.default = Login;","map":{"version":3,"sources":["C:/Desarrollo/ReactNative/ARTConsultaCUIL/components/Login.js"],"names":["Login","props","onPress","setState","loading","state","cuil","esCUILValido","Alert","alert","cuilValido","resp","nombre","resultado","Resultado","Nombre","handleLogin","changeCUIL","verGrilla","showSplash","borderWidth","Component"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {View, TextInput, Button, Alert} from 'react-native';\r\nimport Resultado from '../components/Resultado';\r\nimport Spinner from '../components/Spinner';\r\nimport Splash from './Splash';\r\nimport Background from './Background';\r\nimport verificarCUIL from '../functions/VerificarCUIL';\r\nimport consultarCUIL from '../api/ConsultarCUIL';\r\nimport LoginCUIL from '../api/LoginCUIL';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cuil: null,\r\n      verGrilla: false,\r\n      cuilValido: false,\r\n      resultado: null,\r\n      nombre: '',\r\n      loading: false,\r\n      showSplash: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    /*setTimeout(() => {\r\n      this.setState({showSplash: false});\r\n    }, 5000);*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.showSplash === true ? (\r\n          <Splash />\r\n        ) : (\r\n          <View>\r\n            {this.state.loading === false ? (\r\n              <>\r\n                <TextInput\r\n                  // eslint-disable-next-line react-native/no-inline-styles\r\n                  style={{borderWidth: 1}}\r\n                  onChangeText={this.changeCUIL}\r\n                  value={this.state.cuil}\r\n                  placeholder=\"Ingrese CUIL\"\r\n                  keyboardType={'numeric'}\r\n                />\r\n                <Button onPress={this.onPress} title=\"Ingresar\" />\r\n                <Resultado\r\n                  cuil={this.state.cuil}\r\n                  resultado={this.state.resultado}\r\n                  nombre={this.state.nombre}\r\n                />\r\n                <Background />\r\n              </>\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </View>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  onPress = async () => {\r\n    this.setState({loading: !this.state.loading});\r\n    const esCUILValido = await verificarCUIL(this.state.cuil);\r\n    switch (esCUILValido) {\r\n      case false:\r\n        this.setState({loading: !this.state.loading});\r\n        Alert.alert('CUIL inv√°lido');\r\n        break;\r\n\r\n      case true:\r\n        this.setState({\r\n          cuilValido: true,\r\n        });\r\n        //const resp = await consultarCUIL(this.state.cuil);\r\n        const resp = await LoginCUIL(this.state.cuil);\r\n        switch (resp.nombre) {\r\n          default:\r\n            this.setState({\r\n              resultado: resp.Resultado,\r\n              nombre: resp.Nombre,\r\n              loading: !this.state.loading,\r\n            });\r\n            this.props.handleLogin(resp.Nombre);\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  changeCUIL = cuil => {\r\n    this.setState({\r\n      cuil: cuil,\r\n      resultado: null,\r\n      nombre: '',\r\n      cuilValido: false,\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"script"}