{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.enableScreens = enableScreens;\nexports.screensEnabled = screensEnabled;\nexports.NativeScreenContainer = exports.ScreenContainer = exports.Screen = exports.NativeScreen = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Desarrollo\\\\ReactNative\\\\ARTConsultaCUIL\\\\node_modules\\\\react-native-screens\\\\src\\\\screens.web.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ENABLE_SCREENS = true;\n\nfunction enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nfunction screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nvar NativeScreen = function (_React$Component) {\n  (0, _inherits2.default)(NativeScreen, _React$Component);\n\n  var _super = _createSuper(NativeScreen);\n\n  function NativeScreen() {\n    (0, _classCallCheck2.default)(this, NativeScreen);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(NativeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          style = _this$props.style,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"active\", \"style\"]);\n      return _react.default.createElement(_reactNative.View, (0, _extends2.default)({\n        style: [style, ENABLE_SCREENS && !active ? {\n          display: 'none'\n        } : null]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n  return NativeScreen;\n}(_react.default.Component);\n\nexports.NativeScreen = NativeScreen;\n\nvar Screen = _reactNative.Animated.createAnimatedComponent(NativeScreen);\n\nexports.Screen = Screen;\nvar ScreenContainer = _reactNative.View;\nexports.ScreenContainer = ScreenContainer;\nvar NativeScreenContainer = _reactNative.View;\nexports.NativeScreenContainer = NativeScreenContainer;","map":{"version":3,"sources":["C:/Desarrollo/ReactNative/ARTConsultaCUIL/node_modules/react-native-screens/src/screens.web.js"],"names":["ENABLE_SCREENS","enableScreens","shouldEnableScreens","screensEnabled","NativeScreen","props","active","style","rest","display","React","Component","Screen","Animated","createAnimatedComponent","ScreenContainer","View","NativeScreenContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAIA,cAAc,GAAG,IAArB;;AAEO,SAASC,aAAT,GAAmD;AAAA,MAA5BC,mBAA4B,uEAAN,IAAM;AACxDF,EAAAA,cAAc,GAAGE,mBAAjB;AACD;;AAEM,SAASC,cAAT,GAA0B;AAC/B,SAAOH,cAAP;AACD;;IAEYI,Y;;;;;;;;;;;;6BACF;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACmBC,IADnB;AAGP,aACE,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE,CAACD,KAAD,EAAQP,cAAc,IAAI,CAACM,MAAnB,GAA4B;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAA5B,GAAkD,IAA1D;AADT,SAEMD,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAMD;;;EAV+BE,eAAMC,S;;;;AAajC,IAAMC,MAAM,GAAGC,sBAASC,uBAAT,CAAiCV,YAAjC,CAAf;;;AAEA,IAAMW,eAAe,GAAGC,iBAAxB;;AAEA,IAAMC,qBAAqB,GAAGD,iBAA9B","sourcesContent":["import React from 'react';\nimport { Animated, View } from 'react-native';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nexport class NativeScreen extends React.Component {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        style={[style, ENABLE_SCREENS && !active ? { display: 'none' } : null]}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContainer = View;\n\nexport const NativeScreenContainer = View;\n"]},"metadata":{},"sourceType":"script"}